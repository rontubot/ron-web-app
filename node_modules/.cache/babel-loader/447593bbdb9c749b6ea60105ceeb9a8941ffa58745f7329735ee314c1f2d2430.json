{"ast":null,"code":"var _jsxFileName = \"/workspaces/ron-web-app/src/context/authcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ronAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('ron_token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const profile = await ronAPI.getUserProfile(token);\n          setUser(profile);\n        } catch (error) {\n          console.error('Token inv치lido:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (username, password) => {\n    try {\n      const response = await ronAPI.login(username, password);\n      const {\n        access_token,\n        username: userName\n      } = response;\n      setToken(access_token);\n      setUser({\n        username: userName\n      });\n      localStorage.setItem('ron_token', access_token);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const register = async (username, password, email) => {\n    try {\n      await ronAPI.register(username, password, email);\n      return await login(username, password);\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      if (token) {\n        await ronAPI.logout(token);\n      }\n    } catch (error) {\n      console.error('Error al cerrar sesi칩n:', error);\n    } finally {\n      setToken(null);\n      setUser(null);\n      localStorage.removeItem('ron_token');\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user && !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Gy/ilOavWyDmCgJtTyCRZEgVDjk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ronAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","checkAuth","profile","getUserProfile","error","console","logout","login","username","password","response","access_token","userName","setItem","success","message","register","email","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/ron-web-app/src/context/authcontext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';  \r\nimport { ronAPI } from '../services/api';  \r\n  \r\nconst AuthContext = createContext();  \r\n  \r\nexport const useAuth = () => {  \r\n  const context = useContext(AuthContext);  \r\n  if (!context) {  \r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');  \r\n  }  \r\n  return context;  \r\n};  \r\n  \r\nexport const AuthProvider = ({ children }) => {  \r\n  const [user, setUser] = useState(null);  \r\n  const [token, setToken] = useState(localStorage.getItem('ron_token'));  \r\n  const [loading, setLoading] = useState(true);  \r\n  \r\n  useEffect(() => {  \r\n    const checkAuth = async () => {  \r\n      if (token) {  \r\n        try {  \r\n          const profile = await ronAPI.getUserProfile(token);  \r\n          setUser(profile);  \r\n        } catch (error) {  \r\n          console.error('Token inv치lido:', error);  \r\n          logout();  \r\n        }  \r\n      }  \r\n      setLoading(false);  \r\n    };  \r\n  \r\n    checkAuth();  \r\n  }, [token]);  \r\n  \r\n  const login = async (username, password) => {  \r\n    try {  \r\n      const response = await ronAPI.login(username, password);  \r\n      const { access_token, username: userName } = response;  \r\n        \r\n      setToken(access_token);  \r\n      setUser({ username: userName });  \r\n      localStorage.setItem('ron_token', access_token);  \r\n        \r\n      return { success: true };  \r\n    } catch (error) {  \r\n      return { success: false, error: error.message };  \r\n    }  \r\n  };  \r\n  \r\n  const register = async (username, password, email) => {  \r\n    try {  \r\n      await ronAPI.register(username, password, email);  \r\n      return await login(username, password);  \r\n    } catch (error) {  \r\n      return { success: false, error: error.message };  \r\n    }  \r\n  };  \r\n  \r\n  const logout = async () => {  \r\n    try {  \r\n      if (token) {  \r\n        await ronAPI.logout(token);  \r\n      }  \r\n    } catch (error) {  \r\n      console.error('Error al cerrar sesi칩n:', error);  \r\n    } finally {  \r\n      setToken(null);  \r\n      setUser(null);  \r\n      localStorage.removeItem('ron_token');  \r\n    }  \r\n  };  \r\n  \r\n  const value = {  \r\n    user,  \r\n    token,  \r\n    loading,  \r\n    login,  \r\n    register,  \r\n    logout,  \r\n    isAuthenticated: !!user && !!token,  \r\n  };  \r\n  \r\n  return (  \r\n    <AuthContext.Provider value={value}>  \r\n      {children}  \r\n    </AuthContext.Provider>  \r\n  );  \r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}