{"ast":null,"code":"import _objectSpread from\"/workspaces/ron-web-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL=process.env.REACT_APP_API_URL||'https://ron-app.up.railway.app';class RonAPI{constructor(){this.baseURL=API_BASE_URL;}async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(this.baseURL).concat(endpoint);const config=_objectSpread({headers:_objectSpread({'Content-Type':'application/json'},options.headers)},options);try{const response=await fetch(url,config);const data=await response.json();if(!response.ok){throw new Error(data.detail||'Error en la petici贸n');}return data;}catch(error){console.error('API Error:',error);throw error;}}// Endpoints de autenticaci贸n  \nasync register(username,password,email){return this.request('/auth/register',{method:'POST',body:JSON.stringify({username,password,email})});}async login(username,password){return this.request('/auth/login',{method:'POST',body:JSON.stringify({username,password})});}async logout(token){return this.request('/auth/logout',{method:'POST',headers:{'Authorization':\"Bearer \".concat(token)}});}// Endpoint principal de chat  \nasync chatWithRon(text,token){return this.request('/ron',{method:'POST',headers:{'Authorization':\"Bearer \".concat(token)},body:JSON.stringify({text})});}// Endpoints de usuario  \nasync getUserProfile(token){return this.request('/user/profile',{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)}});}async getUserConversations(token){return this.request('/user/conversations',{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)}});}// Endpoints de utilidad  \nasync healthCheck(){return this.request('/health');}async getMemoryStatus(token){return this.request('/memory-status',{method:'GET',headers:{'Authorization':\"Bearer \".concat(token)}});}}export const ronAPI=new RonAPI();export default ronAPI;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","RonAPI","constructor","baseURL","request","endpoint","options","arguments","length","undefined","url","concat","config","_objectSpread","headers","response","fetch","data","json","ok","Error","detail","error","console","register","username","password","email","method","body","JSON","stringify","login","logout","token","chatWithRon","text","getUserProfile","getUserConversations","healthCheck","getMemoryStatus","ronAPI"],"sources":["/workspaces/ron-web-app/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'https://ron-app.up.railway.app';\r\n  \r\nclass RonAPI {  \r\n  constructor() {  \r\n    this.baseURL = API_BASE_URL;  \r\n  }  \r\n  \r\n  async request(endpoint, options = {}) {  \r\n    const url = `${this.baseURL}${endpoint}`;  \r\n    const config = {  \r\n      headers: {  \r\n        'Content-Type': 'application/json',  \r\n        ...options.headers,  \r\n      },  \r\n      ...options,  \r\n    };  \r\n  \r\n    try {  \r\n      const response = await fetch(url, config);  \r\n      const data = await response.json();  \r\n          \r\n      if (!response.ok) {  \r\n        throw new Error(data.detail || 'Error en la petici贸n');  \r\n      }  \r\n          \r\n      return data;  \r\n    } catch (error) {  \r\n      console.error('API Error:', error);  \r\n      throw error;  \r\n    }  \r\n  }  \r\n  \r\n  // Endpoints de autenticaci贸n  \r\n  async register(username, password, email) {  \r\n    return this.request('/auth/register', {  \r\n      method: 'POST',  \r\n      body: JSON.stringify({ username, password, email }),  \r\n    });  \r\n  }  \r\n  \r\n  async login(username, password) {  \r\n    return this.request('/auth/login', {  \r\n      method: 'POST',  \r\n      body: JSON.stringify({ username, password }),  \r\n    });  \r\n  }  \r\n  \r\n  async logout(token) {  \r\n    return this.request('/auth/logout', {  \r\n      method: 'POST',  \r\n      headers: {  \r\n        'Authorization': `Bearer ${token}`,  \r\n      },  \r\n    });  \r\n  }  \r\n  \r\n  // Endpoint principal de chat  \r\n  async chatWithRon(text, token) {  \r\n    return this.request('/ron', {  \r\n      method: 'POST',  \r\n      headers: {  \r\n        'Authorization': `Bearer ${token}`,  \r\n      },  \r\n      body: JSON.stringify({ text }),  \r\n    });  \r\n  }  \r\n  \r\n  // Endpoints de usuario  \r\n  async getUserProfile(token) {  \r\n    return this.request('/user/profile', {  \r\n      method: 'GET',  \r\n      headers: {  \r\n        'Authorization': `Bearer ${token}`,  \r\n      },  \r\n    });  \r\n  }  \r\n  \r\n  async getUserConversations(token) {  \r\n    return this.request('/user/conversations', {  \r\n      method: 'GET',  \r\n      headers: {  \r\n        'Authorization': `Bearer ${token}`,  \r\n      },  \r\n    });  \r\n  }  \r\n  \r\n  // Endpoints de utilidad  \r\n  async healthCheck() {  \r\n    return this.request('/health');  \r\n  }  \r\n  \r\n  async getMemoryStatus(token) {  \r\n    return this.request('/memory-status', {  \r\n      method: 'GET',  \r\n      headers: {  \r\n        'Authorization': `Bearer ${token}`,  \r\n      },  \r\n    });  \r\n  }  \r\n}  \r\n  \r\nexport const ronAPI = new RonAPI();  \r\nexport default ronAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}