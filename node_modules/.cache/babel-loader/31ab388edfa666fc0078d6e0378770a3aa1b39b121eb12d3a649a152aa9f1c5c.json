{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useCallback}from'react';import{ronAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth debe ser usado dentro de un AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('ron_token'));const[loading,setLoading]=useState(true);const logout=useCallback(async()=>{try{if(token){await ronAPI.logout(token);}}catch(error){console.error('Error al cerrar sesi칩n:',error);}finally{setToken(null);setUser(null);localStorage.removeItem('ron_token');}},[token]);useEffect(()=>{const checkAuth=async()=>{if(token){try{const profile=await ronAPI.getUserProfile(token);setUser(profile);}catch(error){console.error('Token inv치lido:',error);logout();}}setLoading(false);};checkAuth();},[token,logout]);// Agregada la dependencia 'logout'  \nconst login=async(username,password)=>{try{const response=await ronAPI.login(username,password);const{access_token,username:userName}=response;setToken(access_token);setUser({username:userName});localStorage.setItem('ron_token',access_token);return{success:true};}catch(error){return{success:false,error:error.message};}};const register=async(username,password,email)=>{try{await ronAPI.register(username,password,email);return await login(username,password);}catch(error){return{success:false,error:error.message};}};const value={user,token,loading,login,register,logout,isAuthenticated:!!user&&!!token};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","ronAPI","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","logout","error","console","removeItem","checkAuth","profile","getUserProfile","login","username","password","response","access_token","userName","setItem","success","message","register","email","value","isAuthenticated","Provider"],"sources":["/workspaces/ron-web-app/src/context/authcontext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';  \r\nimport { ronAPI } from '../services/api';  \r\n  \r\nconst AuthContext = createContext();  \r\n  \r\nexport const useAuth = () => {  \r\n  const context = useContext(AuthContext);  \r\n  if (!context) {  \r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');  \r\n  }  \r\n  return context;  \r\n};  \r\n  \r\nexport const AuthProvider = ({ children }) => {  \r\n  const [user, setUser] = useState(null);  \r\n  const [token, setToken] = useState(localStorage.getItem('ron_token'));  \r\n  const [loading, setLoading] = useState(true);  \r\n  \r\n  const logout = useCallback(async () => {  \r\n    try {  \r\n      if (token) {  \r\n        await ronAPI.logout(token);  \r\n      }  \r\n    } catch (error) {  \r\n      console.error('Error al cerrar sesi칩n:', error);  \r\n    } finally {  \r\n      setToken(null);  \r\n      setUser(null);  \r\n      localStorage.removeItem('ron_token');  \r\n    }  \r\n  }, [token]);  \r\n  \r\n  useEffect(() => {  \r\n    const checkAuth = async () => {  \r\n      if (token) {  \r\n        try {  \r\n          const profile = await ronAPI.getUserProfile(token);  \r\n          setUser(profile);  \r\n        } catch (error) {  \r\n          console.error('Token inv치lido:', error);  \r\n          logout();  \r\n        }  \r\n      }  \r\n      setLoading(false);  \r\n    };  \r\n  \r\n    checkAuth();  \r\n  }, [token, logout]); // Agregada la dependencia 'logout'  \r\n  \r\n  const login = async (username, password) => {  \r\n    try {  \r\n      const response = await ronAPI.login(username, password);  \r\n      const { access_token, username: userName } = response;  \r\n          \r\n      setToken(access_token);  \r\n      setUser({ username: userName });  \r\n      localStorage.setItem('ron_token', access_token);  \r\n          \r\n      return { success: true };  \r\n    } catch (error) {  \r\n      return { success: false, error: error.message };  \r\n    }  \r\n  };  \r\n  \r\n  const register = async (username, password, email) => {  \r\n    try {  \r\n      await ronAPI.register(username, password, email);  \r\n      return await login(username, password);  \r\n    } catch (error) {  \r\n      return { success: false, error: error.message };  \r\n    }  \r\n  };  \r\n  \r\n  const value = {  \r\n    user,  \r\n    token,  \r\n    loading,  \r\n    login,  \r\n    register,  \r\n    logout,  \r\n    isAuthenticated: !!user && !!token,  \r\n  };  \r\n  \r\n  return (  \r\n    <AuthContext.Provider value={value}>  \r\n      {children}  \r\n    </AuthContext.Provider>  \r\n  );  \r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}